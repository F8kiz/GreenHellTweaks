using GHTweaks.UI.Helper;

using System.Linq;

using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;


namespace GHTweaks.UI
{
    public class GHTweaksSettingsButton : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler
    {
        private readonly Button button;

        private bool isMouseOver = false;



        public GHTweaksSettingsButton()
        {
            ColorBlock menuButtonColors = MainMenu.FindObjectOfType<Button>().colors;
            button = UIHelper.CreateButton("GHTweaks settings", this.transform, menuButtonColors);
        }

        void Start()
        {
            var buttonSize = UIHelper.GetButtonSize(button);
            var height = buttonSize.Height;
            var menuButtons = MainMenu.FindObjectsOfType<Button>();

            foreach (var button in menuButtons)
            {
                Mod.Instance.WriteLog($"Button: {button.name}");
                var size = UIHelper.GetButtonSize(button);
                height += size.Height;
            }

            var quitPosition = (menuButtons.FirstOrDefault(x => x.name == "Quit") ?? menuButtons.Last()).transform.position;
            button.transform.position = new Vector3(quitPosition.x + (buttonSize.Width / 2) + 8, quitPosition.y - height - 2); 

            button.onClick.AddListener(() => {
                Mod.Instance.WriteLog("Set GHTweeksSettingsMenu as active screen");
                MainMenuManager.Get().SetActiveScreen(typeof(GHTweeksSettingsMenu), true);
            });
        }

        void Update()
        {
            if (isMouseOver)
                CursorManager.Get().SetCursor(CursorManager.TYPE.MouseOver);
        }

        public void OnPointerEnter(PointerEventData eventData)
        {
            if (eventData.pointerEnter.transform.parent == button.transform)
            {
                isMouseOver = true;
                UIHelper.ChangeTextColor(button.gameObject, Color.white);
            }
        }

        public void OnPointerExit(PointerEventData eventData)
        {
            if (eventData.pointerEnter.transform.parent == button.transform)
            {
                isMouseOver = false;
                UIHelper.ChangeTextColor(button.gameObject, Color.gray);
            }
        }
    }
}
